version: "3.8"

services:
  postgres:
    image: postgres:15-alpine
    container_name: api-proc-arquivo-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=processamentoarquivo
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d processamentoarquivo"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: api-proc-arquivo:latest
    container_name: api-proc-arquivo-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/processamentoarquivo
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      # Opcional: altera o limite de registros processados por execução
      - PROCESSAMENTO_LIMITE_REGISTROS=500
    ports:
      - "8080:8080"
    restart: unless-stopped

volumes:
  db_data:
    driver: local

# Observações:
# - Antes de executar `docker compose up --build`, gere o JAR localmente:
#     mvn clean package -DskipTests
#   O Dockerfile copia o artefato de `target/api-proc-arquivo-0.0.1-SNAPSHOT.jar`.
